{
	"info": {
		"_postman_id": "72f8fccb-9349-4658-a43c-aad97900bcc3",
		"name": "DMoney_API_Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12316264"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "User login with invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"If user inputs wrong email, will see validation error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"User not found\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"hey@gmail.com\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User login with invalid creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User will see validation error if inputs wrong creds\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"incorrect\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234454\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User login with valid creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData= pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"//pm.environment.set(\"token\",jsonData.token)\r",
									"\r",
									"pm.test(\"Check if user logged in successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"Login successfully\")\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search User",
			"item": [
				{
					"name": "User List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check User List\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"User list\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check if user 1 exists\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users[1].id).equals(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/search?id=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Users",
			"item": [
				{
					"name": "Create user with existing user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User should not be created if enter existing user's email and phone\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"User already exists\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"B6 User 1\",\r\n    \"email\":\"b6user1@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"0154789870\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer 1 With Valid Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"var userId= jsonData.user.id;\r",
									"\r",
									"pm.collectionVariables.set(\"customer_1_id\",userId)\r",
									"pm.collectionVariables.set(\"customer_1_name\",jsonData.user.name)\r",
									"pm.collectionVariables.set(\"customer_1_email\",jsonData.user.email)\r",
									"pm.collectionVariables.set(\"customer_1_phone\",jsonData.user.phone_number)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomId=_.random(10000,99999)\r",
									"pm.collectionVariables.set(\"id\",randomId)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01547{{id}}\",\r\n    \"nid\":\"{{id}}6789\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer 2 With Valid Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"var userId= jsonData.user.id;\r",
									"\r",
									"pm.collectionVariables.set(\"customer_2_id\",userId)\r",
									"pm.collectionVariables.set(\"customer_2_name\",jsonData.user.name)\r",
									"pm.collectionVariables.set(\"customer_2_email\",jsonData.user.email)\r",
									"pm.collectionVariables.set(\"customer_2_phone\",jsonData.user.phone_number)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomId=_.random(10000,99999)\r",
									"pm.collectionVariables.set(\"id\",randomId)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01547{{id}}\",\r\n    \"nid\":\"{{id}}6789\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Agent With Valid Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if agent created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).contains(\"User created successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var jsonData= pm.response.json();\r",
									"var id= jsonData.user.id;\r",
									"var phoneNumber=jsonData.user.phone_number;\r",
									"pm.collectionVariables.set(\"agentId\",id)\r",
									"pm.collectionVariables.set(\"agentPhone\",phoneNumber)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomId=_.random(10000,99999)\r",
									"pm.collectionVariables.set(\"id\",randomId)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomLastName}}_Agent\",\r\n    \"email\":\"agent_{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01547{{id}}\",\r\n    \"nid\":\"{{id}}6789\",\r\n    \"role\":\"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "Create Agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									},
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"Test Agent 1\",\r\n    \"email\":\"agent88900@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Agent\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://dmoney.roadtocareer.net/user/create",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"user",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:31:52 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"10c-tR9Zk19RjTwESofG7uPX2TpP3S8\""
								},
								{
									"key": "Content-Length",
									"value": "268"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User created successfully\",\n    \"user\": {\n        \"id\": 5010,\n        \"name\": \"Test Agent 1\",\n        \"email\": \"agent20202@test.com\",\n        \"password\": \"1234\",\n        \"phone_number\": \"01702614665\",\n        \"nid\": \"123456789\",\n        \"role\": \"Agent\",\n        \"createdAt\": \"2022-09-19T04:31:52.000Z\",\n        \"updatedAt\": \"2022-09-19T04:31:52.000Z\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Deposit To Agent",
			"item": [
				{
					"name": "Deposit to Agent with Invalid Agent Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit to agent shouldn't be successful if enters invalid agent phone number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Account does not exist\");\r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"0987439873985\",\r\n    \"amount\":1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": [
						{
							"name": "Deposit to Agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://dmoney.roadtocareer.net/transaction/deposit",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"transaction",
										"deposit"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:00 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"4e-gR131PNXhrMlFiEH4TLek4QKFYo\""
								},
								{
									"key": "Content-Length",
									"value": "78"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Deposit successful\",\n    \"trnxId\": \"TXN580576\",\n    \"currentBalance\": 9212000\n}"
						}
					]
				},
				{
					"name": "Deposit to Agent With Valid Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit to agent should be successful with all correct data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contains(\"Deposit successful\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{agentPhone}}\",\r\n    \"amount\":1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": [
						{
							"name": "Deposit to Agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://dmoney.roadtocareer.net/transaction/deposit",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"transaction",
										"deposit"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:00 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"4e-gR131PNXhrMlFiEH4TLek4QKFYo\""
								},
								{
									"key": "Content-Length",
									"value": "78"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Deposit successful\",\n    \"trnxId\": \"TXN580576\",\n    \"currentBalance\": 9212000\n}"
						}
					]
				}
			]
		},
		{
			"name": "Deposit To Customer",
			"item": [
				{
					"name": "Deposit to Customer From Customer Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Customer should not be able to deposit to another customer\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"Only Agent can deposit money\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_2_phone}}\",\r\n    \"to_account\":\"{{customer_1_phone}}\",\r\n    \"amount\":200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": [
						{
							"name": "Deposit to Customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"{{agent_phone_number}}\",\r\n    \"to_account\":\"{{customer_phone_number}}\",\r\n    \"amount\":1000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://dmoney.roadtocareer.net/transaction/deposit",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"transaction",
										"deposit"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:16 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-e/3Qx7RQskiPIy3ErlJkaeabZR8\""
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Deposit successful\",\n    \"trnxId\": \"TXN542052\",\n    \"currentBalance\": 9000\n}"
						}
					]
				},
				{
					"name": "Deposit to customer with all correct data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deposit should be successful\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"Deposit successful\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var amount = 200;",
									"pm.collectionVariables.set(\"depositedAmount\", amount);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{agentPhone}}\",\r\n    \"to_account\":\"{{customer_1_phone}}\",\r\n    \"amount\": {{depositedAmount}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": [
						{
							"name": "Deposit to Customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"{{agent_phone_number}}\",\r\n    \"to_account\":\"{{customer_phone_number}}\",\r\n    \"amount\":1000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://dmoney.roadtocareer.net/transaction/deposit",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"transaction",
										"deposit"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:16 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"4b-e/3Qx7RQskiPIy3ErlJkaeabZR8\""
								},
								{
									"key": "Content-Length",
									"value": "75"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Deposit successful\",\n    \"trnxId\": \"TXN542052\",\n    \"currentBalance\": 9000\n}"
						}
					]
				}
			]
		},
		{
			"name": "Check Customer Balance After Deposit",
			"item": [
				{
					"name": "Check customer 1 balance after deposit with invalid phone number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User should not see balance more than 0\", ()=> {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.balance).to.eql(0);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/121",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"121"
							]
						}
					},
					"response": [
						{
							"name": "Check customer balance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									},
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://dmoney.roadtocareer.net/transaction/balance/{{customer_phone_number}}",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"transaction",
										"balance",
										"{{customer_phone_number}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:21 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"29-HgNOfMiRMJMhV6I2kJCFZ36KxcA\""
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "Status",
									"value": "200 OK"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=99"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User balance\",\n    \"balance\": 1000\n}"
						}
					]
				},
				{
					"name": "Check customer 1 balance after deposit with valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Customer 1 should have expected balance\", ()=> {\r",
									"    const response = pm.response.json();\r",
									"    const expectedBalance = pm.collectionVariables.get(\"depositedAmount\")\r",
									"    pm.expect(response.balance).to.eql(expectedBalance);\r",
									"})\r",
									"\r",
									"var json=pm.response.json()\r",
									"pm.collectionVariables.set(\"Customer_1_Balance\",json.balance)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{customer_1_phone}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{customer_1_phone}}"
							]
						}
					},
					"response": [
						{
							"name": "Check customer balance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ",
										"type": "text"
									},
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://dmoney.roadtocareer.net/transaction/balance/{{customer_phone_number}}",
									"protocol": "http",
									"host": [
										"dmoney",
										"roadtocareer",
										"net"
									],
									"path": [
										"transaction",
										"balance",
										"{{customer_phone_number}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:21 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"29-HgNOfMiRMJMhV6I2kJCFZ36KxcA\""
								},
								{
									"key": "Content-Length",
									"value": "41"
								},
								{
									"key": "Status",
									"value": "200 OK"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=99"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User balance\",\n    \"balance\": 1000\n}"
						}
					]
				}
			]
		},
		{
			"name": "Withdraw Money",
			"item": [
				{
					"name": "Withdraw money from invalid agent number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Customer withdrawl should be failed for wrong agent account\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"Account does not exist\")\r",
									"})\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_1_phone}}\",\r\n    \"to_account\":\"232\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": [
						{
							"name": "Money withdraw by customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":50\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/withdraw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"withdraw"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:31 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"54-6wO5BkeE0Fegby1Xe3E2R4MBJ38\""
								},
								{
									"key": "Content-Length",
									"value": "84"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Withdraw successful\",\n    \"trnxId\": \"TXN694480\",\n    \"fee\": 10,\n    \"currentBalance\": 940\n}"
						}
					]
				},
				{
					"name": "Withdraw money from Another Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Money withdraw can't be done from customer\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"Customer can not withdraw money from another customer\")\r",
									"})\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_1_phone}}\",\r\n    \"to_account\":\"{{customer_2_phone}}\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": [
						{
							"name": "Money withdraw by customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":50\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/withdraw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"withdraw"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:31 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"54-6wO5BkeE0Fegby1Xe3E2R4MBJ38\""
								},
								{
									"key": "Content-Length",
									"value": "84"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Withdraw successful\",\n    \"trnxId\": \"TXN694480\",\n    \"fee\": 10,\n    \"currentBalance\": 940\n}"
						}
					]
				},
				{
					"name": "WIthdraw mony with correct data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Withdrawal should be successful\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"Withdraw successful\")\r",
									"})\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var json=pm.response.json()\r",
									"pm.collectionVariables.set(\"fee_withdraw\",json.fee)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_1_phone}}\",\r\n    \"to_account\":\"{{agentPhone}}\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": [
						{
							"name": "Money withdraw by customer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from_account\":\"{{customer_phone_number}}\",\r\n    \"to_account\":\"{{agent_phone_number}}\",\r\n    \"amount\":50\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/withdraw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"withdraw"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:31 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"54-6wO5BkeE0Fegby1Xe3E2R4MBJ38\""
								},
								{
									"key": "Content-Length",
									"value": "84"
								},
								{
									"key": "Status",
									"value": "201 Created"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Withdraw successful\",\n    \"trnxId\": \"TXN694480\",\n    \"fee\": 10,\n    \"currentBalance\": 940\n}"
						}
					]
				}
			]
		},
		{
			"name": "Send Money",
			"item": [
				{
					"name": "Send Money To Invalid Customer Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send Money should not be successful for invalid customer account\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"From/To Account does not exist\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_1_phone}}\",\r\n    \"to_account\":\"123\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Money To Agent Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send money to an agent should not be successful\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"From/To account should not be an agent account\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_1_phone}}\",\r\n    \"to_account\":\"{{agentPhone}}\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send money from Customer_1 to Customer_2 sucessfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Send Money should be successful for all valid data\",()=>{\r",
									"    var jsonData= pm.response.json();\r",
									"    var message= jsonData.message;\r",
									"    pm.expect(message).contains(\"Send money successful\")\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var json =pm.response.json()\r",
									"pm.collectionVariables.set(\"fee_sendmoney\",json.fee)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from_account\":\"{{customer_1_phone}}\",\r\n    \"to_account\":\"{{customer_2_phone}}\",\r\n    \"amount\":50\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check Customer Statement",
			"item": [
				{
					"name": "Check customer statement with invalid customer phone number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Transactions list should be empty, count and balance should be 0\", () => {",
									"    const response = pm.response.json();",
									"    const count = response.count;",
									"    const balance = response.balance;",
									"    pm.expect(count).to.eql(0);",
									"    pm.expect(balance).to.eql(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/statement/123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"statement",
								"123"
							]
						}
					},
					"response": [
						{
							"name": "Check agent balance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/balance/{{agent_phone_number}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"balance",
										"{{agent_phone_number}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:09 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"2a-1C2l8awSnTKTGG4LspKagTZBmlA\""
								},
								{
									"key": "Content-Length",
									"value": "42"
								},
								{
									"key": "Status",
									"value": "200 OK"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User balance\",\n    \"balance\": 10000\n}"
						}
					]
				},
				{
					"name": "Check customer 1 statement with all valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User should get transactions list and transactions list, count should not be empty or zero\", () => {",
									"    const response = pm.response.json();",
									"    const count = response.count;",
									"    const balance = response.balance;",
									"    pm.expect(count).to.not.eql(0);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/statement/{{customer_1_phone}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"statement",
								"{{customer_1_phone}}"
							]
						}
					},
					"response": [
						{
							"name": "Check agent balance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{token}}",
										"type": "text"
									},
									{
										"key": "X-AUTH-SECRET-KEY",
										"value": "{{secretKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/balance/{{agent_phone_number}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"balance",
										"{{agent_phone_number}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 19 Sep 2022 04:32:09 GMT"
								},
								{
									"key": "Server",
									"value": "Apache"
								},
								{
									"key": "X-Powered-By",
									"value": "Express, Phusion Passenger(R) 6.0.14"
								},
								{
									"key": "ETag",
									"value": "W/\"2a-1C2l8awSnTKTGG4LspKagTZBmlA\""
								},
								{
									"key": "Content-Length",
									"value": "42"
								},
								{
									"key": "Status",
									"value": "200 OK"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=100"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User balance\",\n    \"balance\": 10000\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0ODI0MTgzLCJleHAiOjE2NzQ4MjU5ODN9.r5nWz8jRdq52g2DxFHP9L3qecVa9hd-jU_SoEDtpfQQ"
		},
		{
			"key": "partnerKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "randomId",
			"value": 88900
		},
		{
			"key": "agentPhone",
			"value": "0154729428"
		},
		{
			"key": "customer_1_id",
			"value": 3338
		},
		{
			"key": "customer_1_name",
			"value": "Essie Tromp DDS"
		},
		{
			"key": "customer_1_email",
			"value": "Berta_Baumbach87@hotmail.com"
		},
		{
			"key": "customer_1_phone",
			"value": "0154786628"
		},
		{
			"key": "customer_2_id",
			"value": 3339
		},
		{
			"key": "customer_2_name",
			"value": "Brad Quigley II"
		},
		{
			"key": "customer_2_email",
			"value": "Orval.Weimann@hotmail.com"
		},
		{
			"key": "customer_2_phone",
			"value": "0154750938"
		},
		{
			"key": "agentId",
			"value": 3340
		},
		{
			"key": "id",
			"value": 29428
		},
		{
			"key": "Customer_1_Balance",
			"value": 200
		},
		{
			"key": "depositedAmount",
			"value": 200
		},
		{
			"key": "fee_withdraw",
			"value": 5
		},
		{
			"key": "fee_sendmoney",
			"value": 5
		}
	]
}